(define (subset-sum-unique ls k n)
  (cond ((and (= 0 n) (= k 0)) '(()))
        ((or (< n 0) (null? ls) (= k 0)) '())
        (else (append
               (map (lambda (s) (cons (car ls) s))
                    (subset-sum-unique (cdr ls) (- k 1) (- n (car ls))))
               (subset-sum-unique (cdr ls) k n)))))
